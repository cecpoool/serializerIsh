/*
Deployment script for Challenge1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "false"
:setvar DatabaseName "Challenge1"
:setvar DefaultFilePrefix "Challenge1"
:setvar DefaultDataPath "C:\Users\cjmco\AppData\Local\Microsoft\VisualStudio\SSDT\Challenge1"
:setvar DefaultLogPath "C:\Users\cjmco\AppData\Local\Microsoft\VisualStudio\SSDT\Challenge1"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CatID]   INT           NOT NULL,
    [CatName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([CatID] ASC)
);


GO
PRINT N'Creating [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [CustID]    NVARCHAR (8)  NOT NULL,
    [FullName]  NVARCHAR (50) NULL,
    [SegID]     INT           NULL,
    [Country]   NVARCHAR (50) NULL,
    [City]      NVARCHAR (50) NULL,
    [CustState] NVARCHAR (50) NULL,
    [Postcode]  INT           NULL,
    [Region]    NVARCHAR (12) NULL,
    PRIMARY KEY CLUSTERED ([CustID] ASC)
);


GO
PRINT N'Creating [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [CustID]    NVARCHAR (8)  NOT NULL,
    [ProdID]    NVARCHAR (16) NOT NULL,
    [OrderDate] DATE          NOT NULL,
    [Quantity]  INT           NULL,
    [ShipDate]  DATE          NULL,
    [ShipMode]  NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([CustID] ASC, [ProdID] ASC, [OrderDate] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [ProdID]    NVARCHAR (16)   NOT NULL,
    [CatID]     INT             NOT NULL,
    [ProdDesc]  NVARCHAR (100)  NULL,
    [UnitPrice] DECIMAL (10, 2) NULL,
    PRIMARY KEY CLUSTERED ([ProdID] ASC)
);


GO
PRINT N'Creating [dbo].[Region]...';


GO
CREATE TABLE [dbo].[Region] (
    [Region] NVARCHAR (12) NOT NULL,
    PRIMARY KEY CLUSTERED ([Region] ASC)
);


GO
PRINT N'Creating [dbo].[Segment]...';


GO
CREATE TABLE [dbo].[Segment] (
    [SegtID]  INT           NOT NULL,
    [SegName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([SegtID] ASC)
);


GO
PRINT N'Creating [dbo].[Shipping]...';


GO
CREATE TABLE [dbo].[Shipping] (
    [ShippingMeth] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([ShippingMeth] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Customer]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD FOREIGN KEY ([SegID]) REFERENCES [dbo].[Segment] ([SegtID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Customer]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD FOREIGN KEY ([Region]) REFERENCES [dbo].[Region] ([Region]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD FOREIGN KEY ([CustID]) REFERENCES [dbo].[Customer] ([CustID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD FOREIGN KEY ([ProdID]) REFERENCES [dbo].[Product] ([ProdID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD FOREIGN KEY ([ShipMode]) REFERENCES [dbo].[Shipping] ([ShippingMeth]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Product]...';


GO
ALTER TABLE [dbo].[Product] WITH NOCHECK
    ADD FOREIGN KEY ([CatID]) REFERENCES [dbo].[Category] ([CatID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

if '$(LoadTestData)' = 'true'

begin

delete from dbo.[Order];
delete from Customer;
delete from Product;
delete from Category;
delete from Segment;
delete from Region;
delete from Shipping;



INSERT INTO Category(CatID, CatName) VALUES
(1, 'Furniture'),
(2, 'Office Supplies'),
(3, 'Technology');

INSERT INTO Segment(SegtID, SegName) VALUES
(1, 'Consumer'),
(2, 'Corporate'),
(3, 'Home Office');

INSERT INTO Region(Region) VALUES
('South'),
('Central'),
('West'),
('East'),
('North');

INSERT INTO Shipping(ShippingMeth) VALUES
('Second Class'),
('Standard Class'),
('First Class'),
('Overnight Express');

INSERT INTO Product(ProdID, CatID,ProdDesc, UnitPrice) VALUES
('FUR-BO-10001798', 1, 'Bush Somerset Collection Bookcase', 261.96),
('FUR-CH-10000454', 2, 'Mitel 5320 IP Phone VoIP phone', 731.94),
('OFF-LA-10000240', 3, 'Self-Adhesive Address Labels for Typewriters by Universal', 14.62);
	
INSERT INTO Customer(CustID, FullName, SegID, Country, City, CustState, Postcode, Region) VALUES
('CG-12520', 'Claire Gute', 1, 'United States', 'Henderson', 'Oklahoma', 42420, 'Central'),
('DV-13045', 'Darrin Van Huff', 2, 'United States', 'Los Angeles', 'California', 90036, 'West'),
('SO-20335', 'Sean ODonnell', 1, 'United States',  'Fort Lauderdale', 'Florida', 33311, 'South'),
('BH-11710', 'Brosina Hoffman', 3, 'United States',  'Los Angeles', 'California', 90032, 'West');
	
INSERT INTO dbo.[Order](CustID, ProdID, OrderDate, Quantity, ShipDate,ShipMode) VALUES
('CG-12520', 'FUR-BO-10001798', '2016-11-08', 2, '2016-11-11', 'Second Class'),
('CG-12520', 'FUR-CH-10000454', '2016-11-08', 3, '2016-11-11', 'Second Class'),
('CG-12520', 'OFF-LA-10000240', '2016-12-06', 2, '2016-06-16', 'Second Class'),
('DV-13045', 'OFF-LA-10000240', '2015-11-21', 2, '2015-11-26', 'Second Class'),
('DV-13045', 'OFF-LA-10000240', '2014-10-11', 1, '2014-10-15', 'Standard Class'),
('DV-13045', 'FUR-CH-10000454', '2016-11-12', 9, '2016-11-16', 'Standard Class'),
('SO-20335', 'OFF-LA-10000240', '2016-09-02', 5, '2016-09-08', 'Overnight Express'),
('SO-20335', 'FUR-BO-10001798', '2017-08-25', 2, '2017-08-29', 'Second Class'),
('SO-20335', 'FUR-CH-10000454', '2017-06-22', 2, '2017-06-26', 'Standard Class'),
('SO-20335', 'FUR-BO-10001798', '2017-05-01', 3, '2017-05-02', 'First Class');

end
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Customer'), OBJECT_ID(N'dbo.Order'), OBJECT_ID(N'dbo.Product'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
